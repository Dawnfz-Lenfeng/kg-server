name: CI

on:
  push:
    branches: [ '**' ]

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.10"]

    steps:
    - uses: actions/checkout@v3

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
        cache: 'pip'
        cache-dependency-path: |
          backend/pyproject.toml
          backend/setup.cfg

    - name: Install lint tools
      run: |
        python -m pip install --upgrade pip
        pip install black flake8 mypy types-Pillow types-tqdm

    - name: Check formatting with black
      run: |
        cd backend
        black . --check

    - name: Lint with flake8
      run: |
        cd backend
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=88 --statistics
    
    - name: Type check with Mypy
      run: |
        cd backend
        mypy . --install-types --non-interactive --ignore-missing-imports

  test:
    name: Test
    needs: lint
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.10"]
        test-suite: ["preprocessing", "services", "api"]

    steps:
    - uses: actions/checkout@v3

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
        cache: 'pip'
        cache-dependency-path: |
          backend/pyproject.toml
          backend/setup.cfg

    - name: Install OCR dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y poppler-utils tesseract-ocr tesseract-ocr-chi-sim

    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        cd backend
        pip install pytest pytest-asyncio pytest-cov httpx
        pip install -e .

    - name: Run tests
      run: |
        cd backend/tests/${{ matrix.test-suite }}
        pytest . --cov=app -v
